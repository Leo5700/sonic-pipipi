# Повтор со сдвигом

define :chord_player do |root, harm, delay|
  # Эта функция играет аккорд, принимая на вход
  # название аккорда, гармонию и паузу после аккорда.
  play chord(root, harm), release: 0.5
  sleep delay

end

define :square do
  # Эта функция играет квадрат
  chord_player :a3, :minor, 1
  chord_player :f4, :major, 1
  chord_player :c4, :major, 1
  chord_player :e4, :major, 1
end

# Играем квадрат циклом :a и его же со сдвигом циклом :b
live_loop :a do
  square
end

first_run = true
live_loop :b do
  if first_run == true then
    sleep 0.1
    first_run = false
  end
  square
end


# ====================================================================


# В ожидании
# v1.0

# Основные переменные:
# длительность такта (stack)
# длительность бита (beat)
# число битов в такте (rate)

use_synth :dsaw

beat = 0.16
rate = 4

notes_a = ring( :b1, :c2, :d2, :e2)
notes_b = ring( :a3, :a3, :e3, :e3)
notes_c = ring( :b2, :c3, :e2, :e2, :b3, :c3, :e2, :e2)

live_loop :a do
  rate.times do
    play notes_a.tick, release: beat
    sleep beat
  end
end

live_loop :b do
  (rate * 5).times do
    sleep beat
  end
  rate.times do
    play notes_b.tick, release: beat, amp: 0.45
    sleep beat
  end
end

live_loop :c do
  (rate * 15).times do
    sleep beat
  end
  (rate * 2).times do
    play notes_c.tick, release: beat
    sleep beat
  end
end

live_loop :d do
  play :b2, release: beat * 64, amp: 0.2
  sleep beat * rate * 14
  play :c3, release: beat * 52, amp: 0.12
  sleep beat * rate * 14
end

notes_starting = scale( :b5, :major_pentatonic, num_octaves: 2)
live_loop :быстрый do
  (rate * 6).times do
    play notes_starting.choose, release: beat / 2.0, cutoff: rrand(110, 130)
    sleep beat / 2.0
  end
  sleep beat * rate * 43
end


# ====================================================================


https://vk.com/@17551891-generativnaya-muzyka про генеративную музыку


# ====================================================================


# Время не спешит v1 190325

beat = 0.16

use_synth :dsaw
live_loop :a do
  notes_a = scale(:e2, :major_pentatonic, num_octaves: 3)
  16.times do
    play notes_a.choose, release: 12, cutoff: rrand(50, 102), amp: rrand(0.8, 1)
    play notes_a.choose, release: 12, cutoff: rrand(50, 102), amp: rrand(0.8, 1)
    sleep rrand_i(12, 72) * beat
  end
end

use_synth :fm
notes_b = ring(:b2, :c1, :ab2, :c1)
live_loop :b do
  sleep beat/1.6
  play notes_b.tick(), release: beat, cutoff: 107, amp: rrand(0.8, 1)
  sleep beat/0.4
end

live_loop :c do
  sleep beat/2.0
  i = 26
  12.times do
    i -= 1
    print i
    sleep i**1.02 * beat / 24.0
    play scale(:e5, :major_pentatonic, num_octaves: 3).choose, rlease: beat/24.0
  end
  sleep beat * 32 * 12
end


# ====================================================================

